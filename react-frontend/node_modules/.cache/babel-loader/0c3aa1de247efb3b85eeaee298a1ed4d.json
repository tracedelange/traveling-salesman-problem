{"ast":null,"code":"var _jsxFileName = \"/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/InfoWindow.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoWindow = ({\n  cities\n}) => {\n  // const [solCount, setSolCount] = useState(0)\n  // function fac(n) {\n  //     return (n != 1) ? n * fac(n - 1) : 1;\n  //   }\n  // const solutionCount = (n) => {\n  //     return (fac(n-1))/2\n  // }\n  function rFact(num) {\n    if (num === 0) {\n      return 1;\n    } else {\n      return num * rFact(num - 1);\n    }\n  }\n\n  function getCount(num) {\n    if (num === 0) {\n      return 0;\n    } else if (num === 1) {\n      return 1;\n    } else if (num === 2) {\n      return 1;\n    } else {\n      return rFact(num - 1) / 2;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-window\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Number of cities:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: cities.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Number of unique solutions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: getCount(cities.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenClick,\n          children: \"Generate Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InfoWindow;\nexport default InfoWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoWindow\");","map":{"version":3,"sources":["/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/InfoWindow.js"],"names":["React","useState","InfoWindow","cities","rFact","num","getCount","length","handleGenClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE/B;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA,WAASC,KAAT,CAAeC,GAAf,EAAoB;AAChB,QAAIA,GAAG,KAAK,CAAZ,EAAe;AAAE,aAAO,CAAP;AAAW,KAA5B,MACK;AAAE,aAAOA,GAAG,GAAGD,KAAK,CAACC,GAAG,GAAG,CAAP,CAAlB;AAA8B;AACxC;;AAED,WAASC,QAAT,CAAkBD,GAAlB,EAAuB;AACnB,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,CAAP;AACH,KAFD,MAEO,IAAIA,GAAG,KAAK,CAAZ,EAAe;AAClB,aAAO,CAAP;AACH,KAFM,MAEA,IAAIA,GAAG,KAAK,CAAZ,EAAe;AAClB,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAQD,KAAK,CAACC,GAAG,GAAG,CAAP,CAAN,GAAmB,CAA1B;AACH;AACJ;;AAID,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKF,MAAM,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAKD,QAAQ,CAACH,MAAM,CAACI,MAAR;AAAb;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1CD;;KAAMN,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst InfoWindow = ({ cities }) => {\n\n    // const [solCount, setSolCount] = useState(0)\n\n    // function fac(n) {\n    //     return (n != 1) ? n * fac(n - 1) : 1;\n    //   }\n    // const solutionCount = (n) => {\n\n    //     return (fac(n-1))/2\n\n    // }\n    function rFact(num) {\n        if (num === 0) { return 1; }\n        else { return num * rFact(num - 1); }\n    }\n\n    function getCount(num) {\n        if (num === 0) {\n            return 0\n        } else if (num === 1) {\n            return 1\n        } else if (num === 2) {\n            return 1\n        } else {\n            return (rFact(num - 1)) / 2\n        }\n    }\n\n\n\n    return (\n        <div className=\"info-window\">\n            <ul>\n                <li>Number of cities:</li>\n                <li>{cities.length}</li>\n                <li>Number of unique solutions:</li>\n                <li>{getCount(cities.length)}</li>\n                <li><button onClick={handleGenClick}>Generate Solution</button></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default InfoWindow\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/MainStage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport City from './City';\nimport { v4 as uuidv4 } from 'uuid';\nimport Road from './Road';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainStage = ({\n  handleStageClick,\n  cities,\n  lines\n}) => {\n  // const [lines, setLines] = useState([])\n  // const handleClick = (e) => {\n  //     //call handle stage click and add a line\n  //     handleStageClick(e)\n  //     let starting = cities[cities.length-1]\n  //     if (cities.length !== 0){\n  //         console.log(starting)\n  //         let newLine = {\n  //             key: uuidv4(),\n  //             points: [starting.x, starting.y, e.evt.offsetX, e.evt.offsetY],\n  //             stroke: 'red'\n  //         }\n  //         setLines([...lines, newLine])\n  //     }\n  // }\n  const cityArray = cities.map(item => /*#__PURE__*/_jsxDEV(City, {\n    data: item\n  }, item.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 44\n  }, this));\n  const lineArray = lines.map(item => /*#__PURE__*/_jsxDEV(Road, {\n    data: item\n  }, item.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 43\n  }, this)); // console.log(cityArray.length > 0 ? 'true' : 'false')\n\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight - window.innerHeight * .05,\n    onClick: handleStageClick,\n    children: [/*#__PURE__*/_jsxDEV(Layer, {\n      children: lineArray.length > 0 ? {\n        lineArray\n      } : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Layer, {\n      children: [cityArray, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MainStage;\nexport default MainStage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainStage\");","map":{"version":3,"sources":["/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/MainStage.js"],"names":["React","useState","useEffect","render","Stage","Layer","Rect","Text","Circle","Line","City","v4","uuidv4","Road","MainStage","handleStageClick","cities","lines","cityArray","map","item","key","lineArray","window","innerWidth","innerHeight","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,IAA3C,QAAuD,aAAvD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,gBAAD;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAD,KAAuC;AAErD;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA,QAAMC,SAAS,GAAGF,MAAM,CAACG,GAAP,CAAYC,IAAD,iBAAU,QAAC,IAAD;AAAqB,IAAA,IAAI,EAAEA;AAA3B,KAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,UAArB,CAAlB;AACA,QAAMC,SAAS,GAAGL,KAAK,CAACE,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD;AAAqB,IAAA,IAAI,EAAEA;AAA3B,KAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,UAApB,CAAlB,CAzBqD,CA2BrD;;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,MAAM,CAACC,UAArB;AAAiC,IAAA,MAAM,EAAGD,MAAM,CAACE,WAAR,GAAyBF,MAAM,CAACE,WAAR,GAAqB,GAAtF;AAA4F,IAAA,OAAO,EAAEV,gBAArG;AAAA,4BACI,QAAC,KAAD;AAAA,gBACKO,SAAS,CAACI,MAAV,GAAmB,CAAnB,GAAuB;AAACJ,QAAAA;AAAD,OAAvB,GAAmC;AADxC;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAA,iBACKJ,SADL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvCD;;KAAMJ,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport City from './City'\nimport { v4 as uuidv4 } from 'uuid';\nimport Road from './Road';\n\n\nconst MainStage = ({handleStageClick, cities, lines}) => {\n\n    // const [lines, setLines] = useState([])\n\n    // const handleClick = (e) => {\n    //     //call handle stage click and add a line\n    //     handleStageClick(e)\n    //     let starting = cities[cities.length-1]\n\n    //     if (cities.length !== 0){\n    //         console.log(starting)\n    //         let newLine = {\n    //             key: uuidv4(),\n    //             points: [starting.x, starting.y, e.evt.offsetX, e.evt.offsetY],\n    //             stroke: 'red'\n    //         }\n    \n    //         setLines([...lines, newLine])\n    //     }\n    // }\n\n\n    \n\n    const cityArray = cities.map((item) => <City key={item.key} data={item}/>)\n    const lineArray = lines.map((item) => <Road key={item.key} data={item} />)\n\n    // console.log(cityArray.length > 0 ? 'true' : 'false')\n\n    return (\n        <Stage width={window.innerWidth} height={(window.innerHeight) - ((window.innerHeight)*.05)} onClick={handleStageClick}>\n            <Layer>\n                {lineArray.length > 0 ? {lineArray}:null}\n            </Layer>\n            <Layer>\n                {cityArray} {/*City array is rendered second to ensure that lines appear below cities */}\n            </Layer>\n        </Stage>\n    );\n}\n\nexport default MainStage\n"]},"metadata":{},"sourceType":"module"}
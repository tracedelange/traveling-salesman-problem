{"ast":null,"code":"/*!\n * @pixi/mixin-get-child-by-name - v6.0.4\n * Compiled Tue, 11 May 2021 18:00:23 UTC\n *\n * @pixi/mixin-get-child-by-name is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { DisplayObject, Container } from '@pixi/display';\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\n\nDisplayObject.prototype.name = null;\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\n\nContainer.prototype.getChildByName = function getChildByName(name, deep) {\n  for (var i = 0, j = this.children.length; i < j; i++) {\n    if (this.children[i].name === name) {\n      return this.children[i];\n    }\n  }\n\n  if (deep) {\n    for (var i = 0, j = this.children.length; i < j; i++) {\n      var child = this.children[i];\n\n      if (!child.getChildByName) {\n        continue;\n      }\n\n      var target = this.children[i].getChildByName(name, true);\n\n      if (target) {\n        return target;\n      }\n    }\n  }\n\n  return null;\n};","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;AAEA;;;;;;;AAMA,aAAa,CAAC,SAAd,CAAwB,IAAxB,GAA+B,IAA/B;AAEA;;;;;;;;;;;;AAWA,SAAS,CAAC,SAAV,CAAoB,cAApB,GAAqC,SAAS,cAAT,CAAwB,IAAxB,EAAsC,IAAtC,EAAoD;AAErF,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,GAAG,CAA9C,EAAiD,CAAC,EAAlD,EACA;AACI,QAAI,KAAK,QAAL,CAAc,CAAd,EAAiB,IAAjB,KAA0B,IAA9B,EACA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH;AACJ;;AAED,MAAI,IAAJ,EACA;AACI,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,GAAG,CAA9C,EAAiD,CAAC,EAAlD,EACA;AACI,UAAM,KAAK,GAAI,KAAK,QAAL,CAAc,CAAd,CAAf;;AAEA,UAAI,CAAC,KAAK,CAAC,cAAX,EACA;AACI;AACH;;AAED,UAAM,MAAM,GAAI,KAAK,QAAL,CAAc,CAAd,EAA+B,cAA/B,CAA8C,IAA9C,EAAoD,IAApD,CAAhB;;AAEA,UAAI,MAAJ,EACA;AACI,eAAO,MAAP;AACH;AACJ;AACJ;;AAED,SAAO,IAAP;AACH,CA/BD","sourcesContent":["import { DisplayObject, Container } from '@pixi/display';\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\nDisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\nContainer.prototype.getChildByName = function getChildByName(name: string, deep?: boolean): DisplayObject\n{\n    for (let i = 0, j = this.children.length; i < j; i++)\n    {\n        if (this.children[i].name === name)\n        {\n            return this.children[i];\n        }\n    }\n\n    if (deep)\n    {\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            const child = (this.children[i] as Container);\n\n            if (!child.getChildByName)\n            {\n                continue;\n            }\n\n            const target = (this.children[i] as Container).getChildByName(name, true);\n\n            if (target)\n            {\n                return target;\n            }\n        }\n    }\n\n    return null;\n};\n"]},"metadata":{},"sourceType":"module"}
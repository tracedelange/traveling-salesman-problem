{"ast":null,"code":"var _jsxFileName = \"/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/MainStage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport City from './City';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainStage = () => {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  const handleStageClick = e => {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    const newCity = {\n      id: uuidv4(),\n      name: uuidv4(),\n      x: e.evt.x,\n      y: e.evt.y,\n      fill: `rgb(${r},${g},${b})`\n    };\n    setCities([...cities, newCity]);\n  };\n\n  const cityArray = cities.map(item => /*#__PURE__*/_jsxDEV(City, {\n    data: item\n  }, item.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 44\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight - window.innerHeight * .1,\n    onClick: handleStageClick,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: cityArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainStage, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = MainStage;\nexport default MainStage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainStage\");","map":{"version":3,"sources":["/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/MainStage.js"],"names":["React","useState","render","Stage","Layer","Rect","Text","Circle","Line","City","v4","uuidv4","MainStage","cities","setCities","handleStageClick","e","r","Math","floor","random","g","b","newCity","id","name","x","evt","y","fill","cityArray","map","item","key","window","innerWidth","innerHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,IAA3C,QAAuD,aAAvD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMc,gBAAgB,GAAIC,CAAD,IAAO;AAE5B,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,QAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,QAAIE,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AAEA,UAAMG,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEb,MAAM,EADE;AAEZc,MAAAA,IAAI,EAAEd,MAAM,EAFA;AAGZe,MAAAA,CAAC,EAAEV,CAAC,CAACW,GAAF,CAAMD,CAHG;AAIZE,MAAAA,CAAC,EAAEZ,CAAC,CAACW,GAAF,CAAMC,CAJG;AAKZC,MAAAA,IAAI,EAAG,OAAMZ,CAAE,IAAGI,CAAE,IAAGC,CAAE;AALb,KAAhB;AAOAR,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYU,OAAZ,CAAD,CAAT;AACH,GAdD;;AAgBA,QAAMO,SAAS,GAAGjB,MAAM,CAACkB,GAAP,CAAYC,IAAD,iBAAU,QAAC,IAAD;AAAqB,IAAA,IAAI,EAAEA;AAA3B,KAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,UAArB,CAAlB;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,MAAM,CAACC,UAArB;AAAiC,IAAA,MAAM,EAAGD,MAAM,CAACE,WAAR,GAAyBF,MAAM,CAACE,WAAR,GAAqB,EAAtF;AAA2F,IAAA,OAAO,EAAErB,gBAApG;AAAA,2BACI,QAAC,KAAD;AAAA,gBACKe;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA7BD;;GAAMlB,S;;KAAAA,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport City from './City'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst MainStage = () => {\n\n    const [cities, setCities] = useState([])\n\n    const handleStageClick = (e) => {\n\n        let r = Math.floor(Math.random() * 255);\n        let g = Math.floor(Math.random() * 255);\n        let b = Math.floor(Math.random() * 255);\n\n        const newCity = {\n            id: uuidv4(),\n            name: uuidv4(),\n            x: e.evt.x,\n            y: e.evt.y,\n            fill: `rgb(${r},${g},${b})`,\n        }\n        setCities([...cities, newCity])\n    }\n\n    const cityArray = cities.map((item) => <City key={item.key} data={item}/>)\n\n    return (\n        <Stage width={window.innerWidth} height={(window.innerHeight) - ((window.innerHeight)*.1)} onClick={handleStageClick}>\n            <Layer>\n                {cityArray}\n            </Layer>\n        </Stage>\n    );\n}\n\nexport default MainStage\n"]},"metadata":{},"sourceType":"module"}
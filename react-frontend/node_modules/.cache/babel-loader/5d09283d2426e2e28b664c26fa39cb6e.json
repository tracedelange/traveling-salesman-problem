{"ast":null,"code":"var _jsxFileName = \"/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/InfoWindow.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfoWindow = ({\n  solCount\n}) => {\n  // const [solCount, setSolCount] = useState(0)\n  // function fac(n) {\n  //     return (n != 1) ? n * fac(n - 1) : 1;\n  //   }\n  // const solutionCount = (n) => {\n  //     return (fac(n-1))/2\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Number of solutions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: solCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = InfoWindow;\nexport default InfoWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoWindow\");","map":{"version":3,"sources":["/Users/tracedelange/dev/code/project-mode/tsp-interactive/src/components/InfoWindow.js"],"names":["React","useState","InfoWindow","solCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE/B;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5BD;;KAAMD,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst InfoWindow = ({solCount}) => {\n\n    // const [solCount, setSolCount] = useState(0)\n\n    // function fac(n) {\n    //     return (n != 1) ? n * fac(n - 1) : 1;\n    //   }\n    // const solutionCount = (n) => {\n\n    //     return (fac(n-1))/2\n\n    // }\n\n\n\n    return (\n        <div className=\"info-window\">\n\n            <h2>\n                Stats\n            </h2>\n            <ul>\n                <li>Number of solutions:</li>\n                <li>{solCount}</li>\n            </ul>\n            \n        </div>\n    )\n}\n\nexport default InfoWindow\n"]},"metadata":{},"sourceType":"module"}